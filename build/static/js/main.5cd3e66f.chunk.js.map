{"version":3,"sources":["Components/Cart/Checkout.module.css","Components/Cart/Cart.module.css","Components/Cart/CartItem.module.css","Components/Layout/HeaderCartButton.module.css","Components/Meals/AvailableMeals.Module.css","Components/Meals/MealItem/MealItem.module.css","Components/UI/Modal.module.css","Components/Layout/Header.module.css","Components/Meals/MealsSummary.module.css","Components/UI/Card.module.css","Components/Meals/MealItem/MealItemForm.module.css","Components/UI/Input.module.css","assets/meals.jpeg","Components/Cart/CartIcon.js","store/cart-context.js","Components/Layout/HeaderCartButton.js","Components/Layout/Header.js","Components/Meals/MealsSummary.js","Components/UI/Card.js","Components/UI/Input.js","Components/Meals/MealItem/MealItemForm.js","Components/Meals/MealItem/MealItem.js","Components/Meals/AvailableMeals.js","Components/Meals/Meals.js","Components/UI/Modal.js","Components/Cart/CartItem.js","Components/Cart/Checkout.js","Components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","removeItem","id","clearCart","HeaderCartButton","props","useState","btnIsHighlighted","setBtnIsHighlighted","cartCtx","useContext","numberOfCartItems","reduce","currNumber","item","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","Fragment","header","onShowCart","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","price","toFixed","meal","name","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","a","fetch","response","ok","Error","json","key","responseData","loadedMeals","push","then","catch","error","message","MealsLoading","MealsError","mealsList","map","Meals","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","actions","onRemove","onAdd","isEmpty","Checkout","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","console","log","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","formIsValid","onConfirm","onCancel","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","setError","didSubmit","setDidSubmit","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","method","body","JSON","stringify","user","orderedItems","cartItems","bind","modalActions","cartModalContent","isSubmittingModalContent","didSubmitModalContent","defaultCartState","cartReducer","state","action","updatedItems","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","existingItem","updatedTotalAmount","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.5cd3e66f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2fM8O\",\"control\":\"Checkout_control__2eyIy\",\"actions\":\"Checkout_actions__2Hi0P\",\"submit\":\"Checkout_submit__1ce-s\",\"invalid\":\"Checkout_invalid__3-UGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__vzHa0\",\"total\":\"Cart_total__2eGro\",\"actions\":\"Cart_actions__1WjU2\",\"button--alt\":\"Cart_button--alt__2HE6d\",\"button\":\"Cart_button__UFFpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__3MY83\",\"summary\":\"CartItem_summary__xPm89\",\"price\":\"CartItem_price__29Nnm\",\"amount\":\"CartItem_amount__30Txm\",\"actions\":\"CartItem_actions__2E3m3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__eQtbq\",\"icon\":\"HeaderCartButton_icon__lWm7V\",\"badge\":\"HeaderCartButton_badge__2hlQF\",\"bump\":\"HeaderCartButton_bump__32TLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"_1kcz_qLRPRVTLusD3lotdZ\",\"meals-appear\":\"Ft-BjYjFvX--vH1zZsY_c\",\"MealsLoading\":\"_15Rmf8uhybrabCzKi2ohj-\",\"MealsError\":\"_1j4tn3oB2DEY2OmmKWxquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__IMlXn\",\"description\":\"MealItem_description__3Ff9C\",\"price\":\"MealItem_price__2ct5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2znzX\",\"modal\":\"Modal_modal__2QgxK\",\"slide-down\":\"Modal_slide-down__Y0TjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1cM8q\",\"main-image\":\"Header_main-image__1RoZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__1BTNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2N-0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2GhM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3Lg_X\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpeg\";","const CartIcon = () => {\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            viewBox='0 0 20 20'\n            fill='currentColor'\n        >\n            <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\n        </svg>\n    );\n};\n\nexport default CartIcon;","import React from 'react';\n\nconst CartContext = React.createContext({\n    items: [],\n    totalAmount: 0,\n    addItem: () => {\n\n    },\n    removeItem: (id) => {\n\n    },\n    clearCart: () => {\n        \n    }\n});\n\nexport default CartContext;","import {useContext, useEffect, useState} from 'react';\nimport CartIcon from '../Cart/CartIcon';\nimport classes from './HeaderCartButton.module.css';\nimport CartContext from '../../store/cart-context';\n\nconst HeaderCartButton = (props) => {\n    const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n    const cartCtx = useContext(CartContext);\n    const { items } = cartCtx;\n\n    const numberOfCartItems = cartCtx.items.reduce((currNumber, item)=>{\n        return currNumber + item.amount;\n    }, 0);\n\n    const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump: ''}`;\n\n    useEffect(() => {\n        if(items.length === 0){\n            return;\n        }\n        setBtnIsHighlighted(true);\n\n        const timer = setTimeout(() => {\n            setBtnIsHighlighted(false);\n        }, 300);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [items]);\n\n    return (\n        <button className={btnClasses} onClick={props.onClick}>\n            <span className={classes.icon}>\n                <CartIcon/>\n            </span>\n            <span>\n                Your Cart\n            </span>\n            <span className={classes.badge}>\n                {numberOfCartItems}\n            </span>\n        </button>\n    );\n};\n\nexport default HeaderCartButton;","import React from 'react';\nimport classes from './Header.module.css';\nimport mealsImage from '../../assets/meals.jpeg';\nimport HeaderCartButton from './HeaderCartButton';\nconst Header = (props) => {\n    return (\n        <React.Fragment>\n            <header className={classes.header}>\n                <h1>Diner Pass</h1>\n                <HeaderCartButton onClick={props.onShowCart}/>\n            </header>\n            <div className={classes['main-image']}>\n                <img src={mealsImage} alt=\"A table full of fresh cooked food.\"/>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Header;","import classes from './MealsSummary.module.css';\n\nconst MealsSummary = () => {\n    return(\n        <section className={classes.summary}>\n            <h2>Delicious Food, Delivered to You!</h2>\n            <p>\n                Choose your favorite meal from our broad selection of available meals and enjoy a delicious lunch or dinner at home.\n            </p>\n            <p>\n                All our meals are cooked with high-quality ingredients, just-in-time and of course by experienced chefs!\n            </p>\n        </section>\n    );\n};\n\nexport default MealsSummary;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n    return (<div className={classes.card}>{props.children}</div>);\n};\n\nexport default Card;","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = React.forwardRef((props, ref) => {\n    return (\n        <div className={classes.input}>\n            <label htmlFor={props.input.id}>{props.label}</label>\n            <input ref={ref} {...props.input}/>\n        </div>\n    );\n});\n\nexport default Input;","import {useRef, useState} from 'react';\nimport classes from './MealItemForm.module.css';\nimport Input from '../../UI/Input';\n\nconst MealItemForm = (props) => {\n    const [amountIsValid, setAmountIsValid] = useState(true);\n\n    const amountInputRef = useRef();\n\n    const submitHandler =  (event) => {\n        event.preventDefault();\n        const enteredAmount = amountInputRef.current.value;\n        const enteredAmountNumber = +enteredAmount;\n\n        if(enteredAmount.trim().length === 0 || enteredAmount < 1 || enteredAmount > 5){\n            setAmountIsValid(false);\n            return;\n        }\n\n        props.onAddToCart(enteredAmountNumber);\n    }\n\n    return(\n        <form className={classes.form} onSubmit={submitHandler}>\n            <Input\n                ref={amountInputRef} \n                label=\"Amount\" \n                input={{\n                    id: \"amount_\" + props.id,\n                    type: \"number\",\n                    min: '1',\n                    max: '5',\n                    step: '1',\n                    defaultValue: '1'\n                }}\n            />\n            <button>+ Add</button>\n            {!amountIsValid && <p>Please enter a valid amount!</p>}\n        </form>\n    );\n};\n\nexport default MealItemForm;","import {useContext} from 'react';\nimport classes from './MealItem.module.css';\nimport MealItemForm from './MealItemForm';\nimport CartContext from '../../../store/cart-context';\n\nconst MealItem = (props) => {\n    const cartCtx = useContext(CartContext);\n\n    const price = `$${props.price.toFixed(2)}`;\n    \n    const addToCartHandler = amount => {\n        cartCtx.addItem({\n            id: props.id,\n            name: props.name,\n            amount: amount,\n            price: props.price\n        });\n    };\n\n    return (\n        <li className={classes.meal}>\n            <div>\n                <h3>{props.name}</h3>\n                <div className={classes.description}>{props.description}</div>\n                <div className={classes.price}>{price}</div>\n            </div>\n            <div>\n                <MealItemForm id={props.id} onAddToCart={addToCartHandler}/>\n            </div>\n        </li>\n    );\n};\n\nexport default MealItem;","import {useEffect, useState} from 'react';\nimport classes from './AvailableMeals.Module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\n\nconst AvailableMeals = () => {\n\n    const [meals, setMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttpError] = useState();\n    useEffect(() => {\n        const fetchMeals = async () => {\n            const response = await fetch('https://order-app-mv-default-rtdb.firebaseio.com/Meals.json');\n            if(!response.ok){\n                throw new Error('Something went wrong when fetching meals!');\n            }\n            const responseData = await response.json();\n            const loadedMeals = [];\n            for (const key in responseData){\n                loadedMeals.push({\n                    id: key,\n                    name: responseData[key].name,\n                    description: responseData[key].description,\n                    price: responseData[key].price\n                });\n            }\n            setMeals(loadedMeals);\n            setIsLoading(false);\n        };\n        fetchMeals().then().catch(error => {\n            setIsLoading(false);\n            setHttpError(error.message);\n        });\n    }, []);\n\n    if (isLoading) {\n        return  (<section className={classes.MealsLoading}>\n                    <p>Loading...</p>\n                </section>);\n    }\n\n    if(httpError){\n        return(<section className={classes.MealsError}>\n                <p>{httpError}</p>\n              </section>);\n    }\n\n\n    const mealsList = meals.map(meal => {\n        return(\n            <MealItem\n                id={meal.id}\n                key={meal.id}\n                name={meal.name}\n                description={meal.description}\n                price={meal.price}\n            />\n        );\n    });\n    \n    return (\n        <section className={classes.meals}>\n            <Card>\n                <ul>\n                    {mealsList}\n                </ul>\n            </Card>\n        </section>\n    );\n};\n\nexport default AvailableMeals;","import {Fragment} from 'react';\nimport MealsSummary from './MealsSummary';\nimport AvailableMeals from './AvailableMeals';\n\nconst Meals = () => {\n    return (\n        <Fragment>\n            <MealsSummary/>\n            <AvailableMeals/>\n        </Fragment>\n    );\n};\n\nexport default Meals;","import { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport classes from './Modal.module.css';\n\nconst Backdrop = (props) => {\n    return(\n        <div className={classes.backdrop} onClick={props.onClose}></div>\n    );\n};\n\nconst ModalOverlay = (props) => {\n    return(\n        <div className={classes.modal}>\n            <div className={classes.content}>\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nconst portalElement = document.getElementById('overlays');\n\nconst Modal = (props) => {\n    return(\n        <Fragment>\n            {ReactDOM.createPortal(<Backdrop onClose={props.onClose}/>, portalElement)}\n            {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalElement)}\n        </Fragment>\n    );\n};\n\nexport default Modal;","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n    const price = `$${props.price.toFixed(2)}`;\n\n    return (\n        <li className={classes['cart-item']}>\n            <div>\n                <h2>{props.name}</h2>\n                <div className={classes.summary}>\n                    <span className={classes.price}>{price}</span>\n                    <span className={classes.amount}>x {props.amount}</span>\n                </div>\n            </div>\n            <div className={classes.actions}>\n                <button onClick={props.onRemove}>−</button>\n                <button onClick={props.onAdd}>+</button>\n            </div>\n        </li>\n    );\n};\n\nexport default CartItem;\n","import {useRef, useState} from 'react';\nimport classes from './Checkout.module.css';\n\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = (props) => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    });\n\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalCodeInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const confirmHandler = (event) => {\n        event.preventDefault();\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostalCode = postalCodeInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n        \n        setFormInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postalCode: enteredPostalCodeIsValid\n        });\n\n        if(!formIsValid){\n            return;\n        }\n\n        props.onConfirm({\n            name: enteredName,\n            street: enteredStreet,\n            postalCode: enteredPostalCode,\n            city: enteredCity\n        });\n    }\n\n    const nameControlClasses = `${classes.control} ${\n        formInputsValidity.name ? '' : classes.invalid\n    }`;\n    const streetControlClasses = `${classes.control} ${\n        formInputsValidity.street ? '' : classes.invalid\n    }`;\n    const cityControlClasses = `${classes.control} ${\n        formInputsValidity.city ? '' : classes.invalid\n    }`;\n    const postalCodeControlClasses = `${classes.control} ${\n        formInputsValidity.postalCode ? '' : classes.invalid\n    }`;\n\n    console.log(nameControlClasses);\n\n    return(\n        <form onSubmit={confirmHandler}>\n            <div className={nameControlClasses}>\n                <label htmlFor=\"name\">\n                    Your Name\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    ref={nameInputRef}\n                />\n                {!formInputsValidity.name && <p>Please enter a valid name</p>}\n            </div>\n            <div className={streetControlClasses}>\n                <label htmlFor=\"street\">\n                    Street\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"street\"\n                    ref={streetInputRef}\n                />\n                {!formInputsValidity.street && <p>Please enter a valid street</p>}\n            </div>\n            <div className={cityControlClasses}>\n                <label htmlFor=\"city\">\n                    City\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"City\"\n                    ref={cityInputRef}\n                />\n                {!formInputsValidity.city && <p>Please enter a valid city</p>}\n            </div>\n            <div className={postalCodeControlClasses}>\n                <label htmlFor=\"postal\">\n                    Postal Code\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"postal\"\n                    ref={postalCodeInputRef}\n                />\n                {!formInputsValidity.postalCode && <p>Please enter a valid postal code</p>}\n            </div>\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button>Confirm</button>\n        </form>\n    );\n};\n\nexport default Checkout;\n","import React, {useContext, useState}  from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\n\nconst Cart = props => {\n\n    const [isCheckout, setIsCheckout] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [error, setError] = useState(null);\n    const [didSubmit, setDidSubmit] = useState(false);\n\n    const cartCtx = useContext(CartContext);\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = id => {\n        cartCtx.removeItem(id);\n    };\n\n    const cartItemAddHandler = item => {\n        cartCtx.addItem({...item, amount: 1});\n    };\n\n    const orderHandler = () => {\n        setIsCheckout(true);\n    };\n\n    const submitOrderHandler = async (userData) => {\n        setIsSubmitting(true);\n        setError(null);\n        try{\n            const response = await fetch('https://order-app-mv-default-rtdb.firebaseio.com/Orders.json', {\n                method: 'POST',\n                body: JSON.stringify({\n                    user: userData,\n                    orderedItems: cartCtx.items\n                })\n            });\n            if(!response.ok){\n                throw new Error('Request Failed!');\n            }\n        }catch(err){\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsSubmitting(false);\n        setDidSubmit(true);\n        cartCtx.clearCart();\n    };\n\n    const cartItems = (\n        <ul className={classes['cart-items']}>\n            {cartCtx.items.map((item) => {\n                    return(\n                        <CartItem\n                            key={item.id}\n                            name={item.name}\n                            amount={item.amount}\n                            price={item.price}\n                            onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                            onAdd={cartItemAddHandler.bind(null, item)}\n                        />\n                    );\n                })\n            }\n        </ul>\n    );\n\n    const modalActions = (\n        <div className={classes.actions}>\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\n            {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\n        </div>\n    );\n\n    const cartModalContent = (\n        <React.Fragment>\n            { cartItems }\n            <div>\n                <span>Total Amount</span>\n                <span>{totalAmount}</span>\n            </div>\n            { isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} /> }\n            { !isCheckout && modalActions }\n        </React.Fragment>\n    );\n\n    const isSubmittingModalContent = <p>Sending order data...</p>;\n    \n    const didSubmitModalContent = (\n        <React.Fragment>\n            <p>Successfully sent the order!</p>\n            <div className={classes.actions}>\n                <button className={classes.button} onClick={props.onClose}>\n                    Close\n                </button>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <Modal onClose={props.onClose}>\n            {!error && !isSubmitting && !didSubmit ? cartModalContent : <p>{error}</p>}\n            {isSubmitting && isSubmittingModalContent}\n            {didSubmit && didSubmitModalContent}\n        </Modal>\n    );\n};\n\nexport default Cart;","import {useReducer} from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADD\"){\n        const existingCartItemIndex = state.items.findIndex((item) => {\n                return item.id === action.item.id;\n            });\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n        if(existingCartItem){\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            }\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n        else{\n            updatedItems = state.items.concat(action.item);\n        }\n\n        const updatedTotalAmount = state.totalAmount + (action.item.price * action.item.amount);\n        \n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    else if(action.type === \"REMOVE\"){\n        const existingCartItemIndex = state.items.findIndex((item) =>{\n            return item.id === action.id;\n        });\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if(existingItem.amount === 1){\n            updatedItems = state.items.filter(item => item.id !== action.id);\n        }\n        else{\n            const updatedItem = {...existingItem, amount: existingItem.amount - 1};\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    else if(action.type===\"CLEAR\"){\n        return defaultCartState;\n    }\n\n    return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({\n            type: 'ADD',\n            item: item\n        });\n    };\n\n    const removeItemFromCartHandler = (id) => {\n        dispatchCartAction({\n            type: \"REMOVE\",\n            id: id\n        });\n    };\n\n    const clearCartHandler = () => {\n        dispatchCartAction({\n            type: 'CLEAR'\n        });\n    };\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    };\n\n    return(\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;","import React, {useState} from 'react';\nimport Header from './Components/Layout/Header';\nimport Meals from './Components/Meals/Meals';\nimport Cart from './Components/Cart/Cart';\nimport CartProvider from './store/CartProvider';\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler}/>}\n      <Header onShowCart={showCartHandler}/>\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}